# melodic/ros-distro-recipe-blacklist.inc
#
# Copyright (c) 2019-2020 LG Electronics, Inc.

# Initially, blacklist any non-platform recipes with multiple versions found by "bitbake-layers show-recipes --multiple". Remove
# from the blacklist once a PREFERRED_VERSION_<PN> setting is made in ros-distro-preferred-versions.inc .
PNBLACKLIST[abb-irb2400-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[abb-irb2400-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb-irb4400-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb-irb5400-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb-irb6600-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb-irb6640-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[abb-irb6640-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires abb-irb6640-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on abb-irb2400-moveit-config->ogre which is not available', '', d)}"
PNBLACKLIST[actionlib-lisp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[agni-tf-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ainstein-radar-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[ainstein-radar-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ainstein-radar] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires ainstein-radar-rviz-plugins->qtbase which requires meta-qt5 to be included and rdepends on ainstein-radar-gazebo-plugins which requires gazebo', '', d)}"
PNBLACKLIST[aruco-detect] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-deps', 'Depends on unavailable UNRESOLVED-python-cairosvg and UNRESOLVED-python-joblib', '', d)}"
PNBLACKLIST[asmach-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[audibot-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[audibot] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, audibot-gazebo which is not available', '', d)}"
PNBLACKLIST[audio-capture] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[audio-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[audio-play] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[blender-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[calibration-estimation] ?= "Depends on unavailable UNRESOLVED-python-scipy"
PNBLACKLIST[calibration] ?= "depends on calibration-estimation->unavailable UNRESOLVED-python-scipy"
PNBLACKLIST[canopen-motor-node] ?= "Depends on unavailable UNRESOLVED-muparser"
PNBLACKLIST[cartographer-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[catkin-virtualenv] ?= "Requires Python 3; it is not used by any other ROS 1 package."
PNBLACKLIST[cis-camera] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-rviz-plugins->rviz which requires meta-qt5 to be included and depends on jsk-rviz-plugins->jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[cl-tf2] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-tf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-transforms-stamped] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-transforms] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-urdf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cob-android-script-server] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-android] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-android-script-server->cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-cartesian-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-control] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires (cob-cartesian-controller,cob-twist-controller)->cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-command-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-command-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'multimedia', 'pyqt5'], 'Requires cob-dashboard->rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and depends on cob-mimic, cob-sound->vlc which requires meta-multimedia to be included and cob-dashboard->rqt-robot-dashboard->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[cob-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, cob-description, raw-description which is not available', '', d)}"
PNBLACKLIST[cob-default-robot-behavior] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[cob-driver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-gazebo-objects] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[cob-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, cob-gazebo-ros-control which is not available', '', d)}"
PNBLACKLIST[cob-gazebo-ros-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[cob-gazebo-worlds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[cob-grasp-generation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, cob-description which is not available', '', d)}"
PNBLACKLIST[cob-hardware-config] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, cob-description, raw-description which is not available', '', d)}"
PNBLACKLIST[cob-helper-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-interactive-teleop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-manipulation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires cob-moveit-bringup->moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included and rdepends on cob-grasp-generation which requires gazebo', '', d)}"
PNBLACKLIST[cob-mapping-slam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires cob-navigation-global->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-mimic] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-monitoring] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-moveit-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included and rdepends on cob-hardware-config which requires gazebo', '', d)}"
PNBLACKLIST[cob-moveit-interface] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'multimedia', 'vlc'], 'Depends on moveit-commander->moveit-ros-planning-interface->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on cob-script-server which requires cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-navigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: Requires cob-navigation-(local,global,slam)->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-navigation-global] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-navigation-local] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-navigation-slam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-obstacle-distance] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-script-server] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-sound] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-teleop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-twist-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-voltage-control] ?= "Rdepends on unavailable UNRESOLVED-python-tk"
PNBLACKLIST[code-coverage] ?= "Depends on unavailable UNRESOLVED-lcov"
PNBLACKLIST[codec-image-transport] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[collada-urdf-jsk-patch] ?= "Depends on unavailable UNRESOLVED-python-catkin-tools"
PNBLACKLIST[control-box-rst] ?= "Depends on unavailable UNRESOLVED-coinor-libipopt-dev"
PNBLACKLIST[common-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtle-actionlib->turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[cpr-multimaster-tools] ?= "Depends on multimaster-launch->master-discovery-fkie->unavailable UNRESOLVED-python-avahi"
PNBLACKLIST[criutils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-deps', 'Depends on unavailable UNRESOLVED-python-termcolor', '', d)}"
PNBLACKLIST[desistek-saga-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, desistek-saga-description which is not available', '', d)}"
PNBLACKLIST[desistek-saga-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[desistek-saga-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, desistek-saga-description which is not available', '', d)}"
PNBLACKLIST[desktop-full] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires desktop, simulators->ros-tutorials, rqt-robot-plugins->turtlesim->qtbase which requires meta-qt5 to be included and rdepends on urdf-sim-tutorial, simulators which require gazebo', '', d)}"
PNBLACKLIST[desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires ros-tutorials->turtlesim->qtbase which requires meta-qt5 to be included and depends on viz->rqt-robot-plugins->rqt-pose-view->unavailable UNRESOLVED-python-opengl, rqt-common-plugins->rqt-bag-plugins->unavailable UNRESOLVED-python-cairo', '', d)}"
PNBLACKLIST[distance-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires distance-map-rviz->qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[distance-map-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[dockeros] ?= "Depends on unavailable UNRESOLVED-python-docker"
PNBLACKLIST[drone-wrapper] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, turtlebot3-gazebo which is not available', '', d)}"
PNBLACKLIST[dynamixel-workbench] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires dynamixel-workbench-single-manager-gui->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[dynamixel-workbench-single-manager-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[eca-a9-control] ?= "Rdepends on uuv-trajectory-control which rdepends on unavailable UNRESOLVED-python-scipy"
PNBLACKLIST[eca-a9-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[eca-a9-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, eca-a9-description which is not available', '', d)}"
PNBLACKLIST[eus-assimp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted euslisp, roseus', '', d)}"
PNBLACKLIST[euslisp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[eusurdf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[executive-smach-visualization] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'wxpython', 'Depends on smach-viewer->wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', '', d)}"
PNBLACKLIST[exotica-core-task-maps] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on exotica-python->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[exotica-examples] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on exotica-python->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[exotica-ompl-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on exotica-python->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[exotica-python] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[exotica] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on exotica-ompl-solver->exotica-python->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[fake-joint] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires fake-joint-launch->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[fake-joint-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[fetch-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyassimp'], 'Requires fetch-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included anddepends on fetch-moveit-config which rdepends on moveit-python->unavailable UNRESOLVED-python-pyassimp', 'depends on openni2-launch->openni2-camera->unavailable UNRESOLVED-libopenni2-dev', d)}"
PNBLACKLIST[fetch-gazebo-demo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires fetch-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on gazebo-fetch->gazebo which is not available', '', d)}"
PNBLACKLIST[fetch-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[fetch-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyassimp'], 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included and rdepends on moveit-python->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[fetch-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyassimp'], 'Requires fetch-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and rdepends on fetch-moveit-config which rdepends on moveit-python->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[fetch-simulation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires fetch-gazebo-demo->fetch-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and rdepends on fetch-gazebo-demo, fetchit-challenge, fetch-gazebo which require gazebo', '', d)}"
PNBLACKLIST[fetch-tools] ?= "Rdepends on unavailable UNRESOLVED-python-catkin-lint, UNRESOLVED-python-argcomplete"
PNBLACKLIST[fetchit-challenge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[fiducials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-deps', 'depends on aruco-detect->unavailable UNRESOLVED-python-cairosvg and UNRESOLVED-python-joblib', '', d)}"
PNBLACKLIST[find-object-2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[fkie-potree-rviz-plugin] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[franka-example-controllers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires panda-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on panda-moveit-config->moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[franka-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires panda-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on panda-moveit-config->moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[fsrobo-r-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires fsrobo-r-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on fsrobo-r-description->gazebo which is not available', '', d)}"
PNBLACKLIST[fsrobo-r-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[fsrobo-r-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on fsrobo-r-description->gazebo which is not available', '', d)}"
PNBLACKLIST[fsrobo-r] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires fsrobo-r-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on fsrobo-r-description->gazebo which is not available', '', d)}"
PNBLACKLIST[gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[gazebo-ros-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[gazebo-ros-pkgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[gazebo-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[gazebo-rosdev] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[geometry-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires (turtle-tf,turtle-tf2)->turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[geneus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[genlisp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[gl-dependency] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt5-bindings-gl which requires meta-qt5 to be included and python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[grid-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires (grid-map-demos,grid-map-rviz-plugin)->rviz->python-qt-bindings->pyqt5->qtbase which requires meta-qt5 to be included; ogre: Requires grid-map-rviz-plugin->rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[grid-map-rviz-plugin] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[grid-map-demos] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires grid-map-rviz-plugin->rviz->python-qt-bindings->pyqt5->qtbase which requires meta-qt5 to be included; ogre: Requires grid-map-rviz-plugin->rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[gundam-robot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires gundam-rx78-control which requires ros-controllers->rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rdepends on gundam-rx78-gazebo which requires gazebo', '', d)}"
PNBLACKLIST[gundam-rx78-description] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[gundam-rx78-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros, gundam-rx78-control, gazebo-plugins, gazebo-ros-control which is not available', '', d)}"
PNBLACKLIST[h264-encoder-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[h264-video-encoder] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[handeye] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-deps', 'Depends on criutils->unavailable UNRESOLVED-python-termcolor', '', d)}"
PNBLACKLIST[haros-catkin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted catkin-virtualenv', '', d)}"
PNBLACKLIST[hector-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[hector-gazebo-thermal-camera] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[hector-gazebo-worlds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[hector-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, hector-gazebo-worlds, hector-gazebo-plugins, hector-gazebo-thermal-camera which is not available', '', d)}"
PNBLACKLIST[hector-geotiff-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[hector-geotiff] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[hector-sensors-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, hector-gazebo-plugins, gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[hector-slam-launch] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[hector-slam] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[husky-base] ?= "Depends on husky-control->multimaster-launch->master-discovery-fkie->unavailable UNRESOLVED-python-avahi"
PNBLACKLIST[husky-bringup] ?= "Depends on unavailable UNRESOLVED-python-scipy"
PNBLACKLIST[husky-control] ?= "Depends on multimaster-launch->master-discovery-fkie->unavailable UNRESOLVED-python-avahi"
PNBLACKLIST[husky-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires husky-rviz->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[husky-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[husky-robot] ?= "Depends on husky-bringup->unavailable UNRESOLVED-python-scipy"
PNBLACKLIST[husky-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, husky-gazebo which is not available', '', d)}"
PNBLACKLIST[husky-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz-imu-plugin->rviz which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ifm3d-core] ?= "Depends on unavailable libxmlrpc-c++"
PNBLACKLIST[ifm3d] ?= "Depends on ifm3d-core which depends on unavailable libxmlrpc-c++"
PNBLACKLIST[ifopt] ?= "Depends on unavailable UNRESOLVED-coinor-libipopt-dev"
PNBLACKLIST[igvc-self-drive-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, hector-gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[igvc-self-drive-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[igvc-self-drive-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[igvc-self-drive-sim] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, igvc-self-drive-gazebo which is not available', '', d)}"
PNBLACKLIST[image-pipeline] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'Depends on image-view->gtk+->x11', '', d)}"
PNBLACKLIST[image-view2] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'Depends on image-view->gtk+->x11', '', d)}"
PNBLACKLIST[image-view] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'Depends on gtk+->x11', '', d)}"
PNBLACKLIST[imagesift] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-recognition-utils->qtbase which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[imu-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz-imu-plugin->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ira-laser-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'vtk-qt', 'Requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[jackal-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[jackal-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires jackal-viz->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[jackal-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, jackal-gazebo which is not available', '', d)}"
PNBLACKLIST[jackal-tutorials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted rosdoc-lite', '', d)}"
PNBLACKLIST[jackal-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[jderobot-assets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros, turtlebot3-gazebo which is not available', '', d)}"
PNBLACKLIST[jderobot-camviz] ?= "Expects jderobot header files in wrong directory (/opt/jderobot/include/jderobot/types/image.h) and not compatible with opencv version we're using"
PNBLACKLIST[jderobot-drones] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'gazebo'], 'qt5: Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included; pyqt5: rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5; gazebo: drone-wrapper depends on gazebo, turtlebot3-gazebo which is not available', '', d)}"
PNBLACKLIST[joystick-drivers] ?= "Depends on wiimote->unavailable UNRESOLVED-python-cwiid and spacenav-node->UNRESOLVED-libspnav-dev"
PNBLACKLIST[jsk-3rdparty] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on (voice-text,julius-ros)->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-common] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-tools->rqt-reconfigure->python-qt-binding which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-data] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires rviz which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-interactive-marker] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires rviz which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-interactive-test] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires rviz which requires meta-qt5 to be included and depends on jsk-interactive-marker->jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-interactive] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-interactive-marker->rviz which requires meta-qt5 to be included and depends on jsk-interactive-marker->jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-model-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted eus-assimp', '', d)}"
PNBLACKLIST[jsk-pcl-ros-utils] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires rviz which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-pcl-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-recognition-utils->qtbase which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-perception] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires rviz which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-pr2eus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on pr2eus->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-recognition-utils] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires qtbase which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-recognition] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-recognition-utils->qtbase which requires meta-qt5 to be included and depends on jsk-recognition-utils, resized-image-transport, jsk-perception, imagesift, jsk-pcl-ros->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-roseus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted geneus, euslisp, roseus', '', d)}"
PNBLACKLIST[jsk-rqt-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-image-view->qtbase which requires meta-qt5 to be included and depends on unavailable UNRESOLVED-python-urlgrabber, UNRESOLVED-python-sklearn', '', d)}"
PNBLACKLIST[jsk-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires rviz which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires rqt-reconfigure->python-qt-binding which requires meta-qt5 to be included and depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-topic-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jsk-visualization] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-rqt-plugins->qtbase which requires meta-qt5 to be included and depends on jsk-interactive-marker->jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[jskeus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted euslisp', '', d)}"
PNBLACKLIST[json-transport] ?= "Rdepends on unavailable UNRESOLVED-python-msgpack"
PNBLACKLIST[julius-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[kobuki-ftdi] ?= "Not compatible with newer libftdi included in meta-oe: https://github.com/kobuki-base/kobuki_ftdi/issues/3"
PNBLACKLIST[ksql-airport] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[kvh-geo-fog-3d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires kvh-geo-fog-3d-rviz, qtbase, qtdeclarative, qtmultimedia, qtsvg which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[kvh-geo-fog-3d-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase, qtdeclarative, qtmultimedia, qtsvg which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[lauv-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, lauv-description which is not available', '', d)}"
PNBLACKLIST[lauv-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[lauv-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, lauv-description which is not available', '', d)}"
PNBLACKLIST[leuze-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires leuze-description->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[leuze-description] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[leuze-ros-drivers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires leuze-description->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[libg2o] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'opengl', 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[libqt-concurrent] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-gui] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-network] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-opengl-rosdev] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-opengl] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-rosdev] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-svg-rosdev] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtsvg which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-widgets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[librviz-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[linux-networking] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires asmach-tutorials->turtlesim->qtbase which requires meta-qt5 to be included', 'depends on multi-interface-roam->unavailable python-twisted-core', d)}"
PNBLACKLIST[lvr2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires qtbase which requires meta-qt5 to be included and requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[master-discovery-fkie] ?= "Depends on unavailable UNRESOLVED-python-avahi"
PNBLACKLIST[master-sync-fkie] ?= "Depends on master-discovery-fkie->unavailable UNRESOLVED-python-avahi"
PNBLACKLIST[mcmillan-airfield] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[mecanum-gazebo-plugin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[mir-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros-control which is not available', '', d)}"
PNBLACKLIST[mir-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, mir-description which is not available', '', d)}"
PNBLACKLIST[mir-gazebo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires rqt-robot-steering->python-qt-binding which requires meta-qt5 to be included and rdepends on mir-driver, mir-description, gazebo-ros which require gazebo', '', d)}"
PNBLACKLIST[mir-navigation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, mir-driver which is not available', '', d)}"
PNBLACKLIST[mir-robot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires mir-gazebo->rqt-robot-steering->python-qt-binding which requires meta-qt5 to be included and rdepends on mir-driver, mir-navigation, mir-description which require gazebo', '', d)}"
PNBLACKLIST[moveit-commander] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on moveit-ros-planning-interface->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[moveit-python] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pyassimp', 'Depends on UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[moveit-ros-visualization] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included and ogre which is not available', '', d)}"
PNBLACKLIST[moveit-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[moveit-setup-assistant] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included and ogre which is not available', '', d)}"
PNBLACKLIST[moveit-visual-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires rviz-visual-tools->rviz which requires meta-qt5 to be included and depends on rviz-visual-tools->ogre which is not available', '', d)}"
PNBLACKLIST[moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included and depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[movie-publisher] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mpc-local-planner] ?= "Depends on control-box-rst which depends on unavailable UNRESOLVED-coinor-libipopt-dev"
PNBLACKLIST[mrpt-bridge] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-ekf-slam-2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-ekf-slam-3d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-graphslam-2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-icp-slam-2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-local-obstacles] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-localization] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-navigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-reactivenav2d, ...->mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-rawlog] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-rbpf-slam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-reactivenav2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt-slam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'Requires mrpt-ekf-slam-2d, ...->mrpt-bridge->qtbase which requires meta-qt5 to be included and depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[mrpt1] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[multi-interface-roam] ?= "Depends on unavailable python-twisted-core"
PNBLACKLIST[multi-map-server] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-tools->rqt-reconfigure->python-qt-binding which requires meta-qt5 to be included and depends on jsk-tools->jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[multimaster-fkie] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires node-manager-fkie which requires meta-qt5 to be included', 'depends on master-sync-fkie which dependsepends on master-discovery-fkie->unavailable UNRESOLVED-python-avahi', d)}"
PNBLACKLIST[multimaster-launch] ?= "Depends on master-discovery-fkie->unavailable UNRESOLVED-python-avahi"
PNBLACKLIST[mvsim] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'qt5: Requires mrpt-bridge->qtbase which requires meta-qt5 to be included; ffmpeg: Depends on (mrpt-bridge,mrpt1)->ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[nanomsg] ?= "It is a catkin-ized edition of the upstream version that is not used by any other ROS 1 package."
PNBLACKLIST[nao-meshes] ?= "Depends on unavailable UNRESOLVED-java"
PNBLACKLIST[neonavigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires neonavigation-launch->trajectory-tracker-rviz-plugins->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[neonavigation-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires trajectory-tracker-rviz-plugins->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[neonavigation-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires trajectory-tracker-rviz-plugins->qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[network-autoconfig] ?= "Rdepends on unavailable UNRESOLVED-network-manager"
PNBLACKLIST[nmea-gps-plugin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[node-manager-fkie] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires python-qt-binding which requires meta-qt5 to be included', 'depends on master-sync-fkie which dependsepends on master-discovery-fkie->unavailable UNRESOLVED-python-avahi', d)}"
PNBLACKLIST[octomap-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[octovis] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'It has dependencies on Qt4 packages; it is not used by any other ROS 1 package.', '', d)}"
PNBLACKLIST[odom-frame-publisher] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted rosdoc-lite', '', d)}"
PNBLACKLIST[open-manipulator-control-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[open-manipulator-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[open-manipulator-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included and depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[open-manipulator-simulations] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, open-manipulator-gazebo which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-simulations] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, open-manipulator-with-tb3-gazebo which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-waffle-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included and depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-waffle-pi-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included and depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires open-manipulator-with-tb3-waffle-moveit->moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included and depends on open-manipulator-with-tb3-waffle-moveit->moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[open-manipulator] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires open-manipulator-control-gui, open-manipulator-moveit->qtbase which requires meta-qt5 to be included and depends on open-manipulator-moveit->moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included and depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[openhrp3] ?= "Depends on unavailable UNRESOLVED-atlas, UNRESOLVED-jython, UNRESOLVED-python-omniorb, UNRESOLVED-f2c and blacklisted openrtm-aist"
PNBLACKLIST[openni-camera] ?= "Depends on unavailable UNRESOLVED-libopenni-dev"
PNBLACKLIST[openni-launch] ?= "depends on openni-camera->unavailable UNRESOLVED-libopenni-dev"
PNBLACKLIST[openni2-camera] ?= "Depends on unavailable UNRESOLVED-libopenni2-dev"
PNBLACKLIST[openni2-launch] ?= "depends on openni2-camera->unavailable UNRESOLVED-libopenni2-dev"
PNBLACKLIST[openrtm-aist-python] ?= "Depends on unavailable UNRESOLVED-python-omniorb"
PNBLACKLIST[openrtm-aist] ?= "Depends on unavailable UNRESOLVED-omniorb"
PNBLACKLIST[optpp-catkin] ?= "Depends on unavailable UNRESOLVED-gfortran"
PNBLACKLIST[osg-interactive-markers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'osg', 'depends on unavailable UNRESOLVED-libopenscenegraph', '', d)}"
PNBLACKLIST[osg-markers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'osg', 'depends on unavailable UNRESOLVED-libopenscenegraph', '', d)}"
PNBLACKLIST[osg-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'osg', 'depends on unavailable UNRESOLVED-libopenscenegraph', '', d)}"
PNBLACKLIST[panda-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[parrot-arsdk] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[pepper-meshes] ?= "Depends on unavailable UNRESOLVED-java"
PNBLACKLIST[perception] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'Depends on image-pipeline->image-view->gtk+->x11', '', d)}"
PNBLACKLIST[pgm-learner] ?= "Depends on unavailable UNRESOLVED-python-libpgm-pip, UNRESOLVED-python-scipy"
PNBLACKLIST[pilz-industrial-motion-testutils] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on moveit-commander->moveit-ros-planning-interface->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[pilz-industrial-motion] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on pilz-trajectory-generation->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on pilz-robot-programming->moveit-commander->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[pilz-robot-programming] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'pyassimp'], 'Depends on pilz-trajectory-generation->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on moveit-commander->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[pilz-robots] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires prbt-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included', 'depends on prbt-hardware-support->pilz-utils->unavailable clang-tidy and depends on prbt-support->canopen-motor-node->unavailable UNRESOLVED-muparser', d)}"
PNBLACKLIST[pilz-status-indicator-rqt] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[pilz-utils] ?= "Depends on unavailable clang-tidy"
PNBLACKLIST[pilz-control] ?= "Depends on pilz-utils which depends on unavailable clang-tidy"
PNBLACKLIST[plotjuggler] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[pose-cov-ops] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg'], 'qt5: Requires mrpt-bridge->qtbase which requires meta-qt5 to be included; ffmpeg: Depends on (mrpt-bridge,mrpt1)->ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[pr2-controller-configuration-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[pr2-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[pr2-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[pr2-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, pr2-gazebo, pr2-gazebo-plugins, pr2-controller-configuration-gazebo which is not available', '', d)}"
PNBLACKLIST[pr2eus-moveit] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on pr2eus->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[pr2eus-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly'], 'Requires jsk-pcl-ros->jsk-recognition-utils->qtbase which requires meta-qt5 to be included and depends on jsk-pcl-ros, pr2eus, jsk-interactive-marker->jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[pr2eus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[prbt-gazebo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires prbt-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and rdepends on gazebo-ros, gazebo-ros-control which requires gazebo', '', d)}"
PNBLACKLIST[prbt-grippers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires prbt-pg70-support->prbt-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included', 'rdepends on prbt-pg70-support->prbt-support->canopen-motor-node->unavailable UNRESOLVED-muparser', d)}"
PNBLACKLIST[prbt-hardware-support] ?= "Depends on pilz-utils->unavailable clang-tidy"
PNBLACKLIST[prbt-moveit-config] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included', 'depends on prbt-hardware-support->pilz-utils->unavailable clang-tidy and depends on prbt-support->canopen-motor-node->unavailable UNRESOLVED-muparser', d)}"
PNBLACKLIST[prbt-pg70-support] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires prbt-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included', 'depends on prbt-support->canopen-motor-node->unavailable UNRESOLVED-muparser', d)}"
PNBLACKLIST[prbt-support] ?= "Depends on canopen-motor-node->unavailable UNRESOLVED-muparser"
PNBLACKLIST[psen-scan] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[py-trees-ros] ?= "Rdepends on unavailable UNRESOLVED-python-termcolor"
PNBLACKLIST[python-qt-binding] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires meta-qt5 to be included and pyqt5 enabled', '', d)}"
PNBLACKLIST[qt-dotgraph] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires python-qt-binding which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[qt-gui-app] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires qt-gui->qtbase which requires meta-qt5 to be included and qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[qt-gui-py-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires python-qt-binding which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[qt-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires qtbase which requires meta-qt5 to be included and python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[qt-qmake-native] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[qt-qmake] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[qt-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires qt-tutorials which requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[qt-tutorials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[raw-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[rc-cloud-accumulator] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[resized-image-transport] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[respeaker-ros] ?= "Depends on unavailable UNRESOLVED-python-pyusb-pip, UNRESOLVED-python-speechrecognition-pip"
PNBLACKLIST[rexrov2-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[rexrov2-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[rexrov2-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, rexrov2-control, rexrov2-description which is not available', '', d)}"
PNBLACKLIST[ridgeback-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[ridgeback-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[ridgeback-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires ridgeback-viz->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ridgeback-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, ridgeback-gazebo which is not available', '', d)}"
PNBLACKLIST[ridgeback-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ros-canopen] ?= "Depends on canopen-motor-node->unavailable UNRESOLVED-muparser"
PNBLACKLIST[ros-emacs-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[ros-speech-recognition] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[ros-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[rosbag-pandas] ?= "Rdepends on unavailable UNRESOLVED-python-pandas"
PNBLACKLIST[rosdoc-lite] ?= "Generation of ROS package documentation will never be done on the target."
PNBLACKLIST[rosemacs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[roseus-mongo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted roseus', '', d)}"
PNBLACKLIST[roseus-smach] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted euslisp, roseus', '', d)}"
PNBLACKLIST[roseus-tutorials] ?= "depends on roseus->blacklisted geneus, euslisp"
PNBLACKLIST[roseus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted geneus, euslisp', '', d)}"
PNBLACKLIST[roslisp-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[roslisp-repl] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[roslisp-utilities] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[roslisp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[rospilot] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[rosserial-arduino] ?= "Depends on unavailable UNRESOLVED-arduino-core"
PNBLACKLIST[rostwitter] ?= "Depends on unavailable UNRESOLVED-python-requests-oauthlib"
PNBLACKLIST[rotors-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[rotors-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, rotors-gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[rotors-simulator] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'qt5: Requires rqt-rotors->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included; gazebo: depends on (rotors-gazebo,rotors-gazebo-plugins)->gazebo which is not available', '', d)}"
PNBLACKLIST[rqt-action] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-py-common which requires meta-qt5 to be included and (rqt-msg,rqt-py-common)->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-bag-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and depends on unavailable UNRESOLVED-python-cairo', '', d)}"
PNBLACKLIST[rqt-bag] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-common-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-py-common which requires meta-qt5 to be included and depends on rqt-bag-plugins->unavailable UNRESOLVED-python-cairo', '', d)}"
PNBLACKLIST[rqt-console] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and (rqt-gui-py,rqt-py-common,rqt-logger-level)->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-dep] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-drone-teleop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-ez-publisher] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-py-common which requires meta-qt5 to be included and rqt-py-common->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-graph] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-ground-robot-teleop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-gui-py] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires qt-gui->qtbase which requires meta-qt5 to be included and qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires qt-gui->qtbase which requires meta-qt5 to be included and qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-joint-trajectory-plot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-launchtree] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-logger-level] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-msg] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-nav-view] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-plot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-pose-view] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires python-qt-binding which requires meta-qt5 to be included and depends on unavailable UNRESOLVED-python-opengl', '', d)}"
PNBLACKLIST[rqt-publisher] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-py-common] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-py-console] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-py-trees] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires qt-dotgraph which requires meta-qt5 to be included and depends on unavailable UNRESOLVED-python-termcolor, UNRESOLVED-python-pygraphviz', '', d)}"
PNBLACKLIST[rqt-reconfigure] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-robot-dashboard] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-robot-monitor] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-robot-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-rviz->qtbase which requires meta-qt5 to be included and depends on rqt-pose-view->unavailable UNRESOLVED-python-opengl', '', d)}"
PNBLACKLIST[rqt-robot-steering] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-rotors] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-runtime-monitor] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-service-caller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-py-common which requires meta-qt5 to be included and rqt-py-common->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-shell] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-srv] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-msg->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-tf-tree] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-top] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-topic] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and rqt-gui(-py)->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-web] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rtabmap-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires rviz which requires meta-qt5 to be included and depends on rtabmap which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[rtabmap] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires qt-gui-cpp->qtbase which requires meta-qt5 to be included and requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[rtctree] ?= "Depends on unavailable UNRESOLVED-python-omniorb"
PNBLACKLIST[rtshell] ?= "Depends on unavailable UNRESOLVED-python-omniorb"
PNBLACKLIST[rtsprofile] ?= "Depends on unavailable UNRESOLVED-python-omniorb"
PNBLACKLIST[rviz-imu-plugin] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-python-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-plugin-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-visual-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires meta-qt5 to be included and ogre which is not available', '', d)}"
PNBLACKLIST[rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires python-qt-binding which requires meta-qt5 to be included and ogre which is not available', '', d)}"
PNBLACKLIST[sand-island] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[seed-r7-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires seed-r7-typef-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on seed-r7-typef-moveit-config->moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[seed-r7-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[seed-r7-ros-pkg] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires seed-r7-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included', 'depends on seed-r7-samples->smach-viewer->wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', d)}"
PNBLACKLIST[seed-r7-samples] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires rviz-plugin-tutorials->qtbase which requires meta-qt5 to be included', 'depends on smach-viewer->wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', d)}"
PNBLACKLIST[seed-r7-typef-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included and depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[sick-safetyscanners] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-reconfigure->python-qt-binding which requires meta-qt5 to be included and rqt-reconfigure->rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[simple-grasping] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt', 'pyassimp'], 'Requires libvtk-qt which is not available and depends on moveit-python->unavailable UNRESOLVED-python-pyassimp', '', d)}"
PNBLACKLIST[simulators] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires rqt-robot-plugins->rqt-rviz->qtbase which requires meta-qt5 to be included and rdepends on gazebo-ros-pkgs which requires gazebo', '', d)}"
PNBLACKLIST[slam-toolbox] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[slime-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[slime-wrapper] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[smach-viewer] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'wxpython', 'Depends on wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', '', d)}"
PNBLACKLIST[sound-play] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[spacenav-node] ?= "Depends on unavailable UNRESOLVED-libspnav-dev"
PNBLACKLIST[spatio-temporal-voxel-layer] ?= "Depends on unavailable UNRESOLVED-libopenvdb, UNRESOLVED-libopenexr-dev, UNRESOLVED-libopenvdb-dev"
PNBLACKLIST[swri-console] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[swri-profiler-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[towr-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires rqt-bag->python-qt-binding which requires meta-qt5 to be included', 'depends on towr->ifopt->unavailable UNRESOLVED-coinor-libipopt-dev', d)}"
PNBLACKLIST[towr] ?= "Depends on ifopt->unavailable UNRESOLVED-coinor-libipopt-dev"
PNBLACKLIST[trac-ik-examples] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on trac-ik-lib->libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trac-ik-kinematics-plugin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on trac-ik-lib->libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trac-ik-lib] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trac-ik-python] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on trac-ik-lib->libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trac-ik] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on trac-ik-lib->libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trajectory-tracker-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[tts] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[turtle-actionlib] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[turtle-tf] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[turtle-tf2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[turtlebot3-automatic-parking-vision] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[turtlebot3-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[turtlebot3-simulations] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, turtlebot3-gazebo which is not available', '', d)}"
PNBLACKLIST[turtlesim] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[turtlesim-dash-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[urdf-sim-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires rviz which requires meta-qt5 to be included and rdepends on gazebo-ros-control which requires gazebo', '', d)}"
PNBLACKLIST[urdf-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[usb-cam] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[usv-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[uuv-control-utils] ?= "Rdepends on uuv-trajectory-control which rdepends on unavailable UNRESOLVED-python-scipy"
PNBLACKLIST[uuv-descriptions] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[uuv-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uuv-gazebo-ros-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uuv-gazebo-worlds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[uuv-sensor-ros-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uuv-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, uuv-descriptions, uuv-gazebo-plugins, uuv-gazebo-ros-plugins, uuv-gazebo-worlds, uuv-sensor-ros-plugins, uuv-world-plugins, uuv-world-ros-plugins which is not available', '', d)}"
PNBLACKLIST[uuv-trajectory-control] ?= "Rdepends on unavailable UNRESOLVED-python-scipy"
PNBLACKLIST[uuv-world-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uuv-world-ros-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uwsim-bullet] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on freeglut which is not available because of missing opengl and libxext, freeglut which require x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[uwsim-osgbullet] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'osg'], 'Depends on uwsim-osgworks->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable UNRESOLVED-libopenscenegraph', '', d)}"
PNBLACKLIST[uwsim-osgocean] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'osg'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable UNRESOLVED-libopenscenegraph', '', d)}"
PNBLACKLIST[uwsim-osgworks] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'osg'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable UNRESOLVED-libopenscenegraph', '', d)}"
PNBLACKLIST[uwsim] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'osg'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on osg-utils, osg-markers, osg-interactive-markers->unavailable UNRESOLVED-libopenscenegraph', '', d)}"
PNBLACKLIST[vapor-master] ?= "Depends on unavailable UNRESOLVED-npm-native"
PNBLACKLIST[velodyne-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[velodyne-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, velodyne-gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[vision-visp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'Depends on visp-bridge, visp-auto-tracker, visp-hand2eye-calibration, visp-tracker, visp-camera-calibration->ogre which is not available', '', d)}"
PNBLACKLIST[visp-auto-tracker] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp-bridge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp-camera-calibration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp-hand2eye-calibration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp-tracker] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'Depends on ogre which is not available', '', d)}"
PNBLACKLIST[visualization-osg] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'osg', 'depends on osg-markers, osg-utils, osg-interactive-markers->unavailable UNRESOLVED-libopenscenegraph', '', d)}"
PNBLACKLIST[visualization-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires (librviz-tutorial,rviz-python-tutorial,rviz-plugin-tutorials)->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[visualstates] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt5-bindings which is not available and python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-robot-plugins->rqt-rviz->qtbase which requires meta-qt5 to be included and depends on rqt-robot-plugins->rqt-pose-view->unavailable UNRESOLVED-python-opengl, rqt-common-plugins->rqt-bag-plugins->unavailable UNRESOLVED-python-cairo', '', d)}"
PNBLACKLIST[voice-text] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[vrx-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[wamv-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, hector-gazebo-plugins, gazebo-plugins, velodyne-gazebo-plugins, usv-gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[warthog-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[warthog-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires warthog-viz->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[warthog-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, warthog-gazebo which is not available', '', d)}"
PNBLACKLIST[warthog-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[wave-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[wave-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[web-video-server] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffmpeg', 'Depends on ffmpeg which requires commercial license', '', d)}"
PNBLACKLIST[webkit-dependency] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt5-bindings-webkit which requires meta-qt5 to be included and python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[webrtc-ros] ?= "depends on webrtc which is blacklisted Fetches depot_tools during do_configure and then tries to use vpython which is not in dependencies"
PNBLACKLIST[webrtc] ?= "Fetches depot_tools during do_configure and then tries to use vpython which isn't in dependencies"
PNBLACKLIST[wge100-camera-firmware] ?= "Depends on unavailable UNRESOLVED-gforth"
PNBLACKLIST[wge100-driver] ?= "Depends on wge100-camera-firmware->unavailable UNRESOLVED-gforth"
PNBLACKLIST[wifi-ddwrt] ?= "Depends on unavailable UNRESOLVED-python-mechanize"
PNBLACKLIST[wiimote] ?= "Depends on unavailable UNRESOLVED-python-cwiid"
PNBLACKLIST[yosemite-valley] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"

# do_compile issues in the generated recipes
ROS_WORLD_SKIP_GROUPS += "unknown-compile"
PNBLACKLIST[acado] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[assimp-devel] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[aws-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[bayesian-belief-networks] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[behaviortree-cpp-v3] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[behaviortree-cpp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[canopen-master] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[downward] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[fcl-catkin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[fetch-drivers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[ff] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[ffha] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[imagezero-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[imagezero] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[julius] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[libdlib] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[libphidget21] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[libphidgets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[libsiftfast] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[libuvc-camera] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[map-merge-3d] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[moveit-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[naoqi-libqi] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[nerian-stereo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[nlopt] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[obj-to-pointcloud] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[odva-ethernetip] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[p2os-urdf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[pr2-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[rail-mesh-icp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[rc-dynamics-api] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[rosbag-editor] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'unknown-compile'], 'Requires qtbase which requires meta-qt5 to be included; unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[sainsmart-relay-usb] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[sbpl-lattice-planner] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[sick-scan] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[teb-local-planner] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'unknown-compile'], 'Depends on libg2o->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; unknown-compile: do_compile tasks fails for unknown reason', '', d)}"
PNBLACKLIST[wamv-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-compile', 'unknown-compile: do_compile tasks fails for unknown reason', '', d)}"

# do_configure issues in the generated recipes
ROS_WORLD_SKIP_GROUPS += "unknown-configure"
PNBLACKLIST[epos2-motor-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[hebi-cpp-api] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[hpp-fcl] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[libntcan] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[librealsense2] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[mongodb-store] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['mongodb', 'unknown-configure'], 'Requires mongodb; unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[novatel-gps-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[prosilica-gige-sdk] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[pyros-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[qt-gui-cpp] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-configure'], 'Requires qtbase which requires meta-qt5 to be included and python-qt-binding which requires pyqt5; unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[rc-genicam-api] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[rosmon-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[stage] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-configure'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and fltk, gtk+->x11; unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[swri-image-util] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[swri-transform-util] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[warehouse-ros-mongo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['mongodb', 'unknown-configure'], 'Requires mongodb; unknown-configure: do_configure tasks fails for unknown reason', '', d)}"
PNBLACKLIST[ypspur-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-configure', 'unknown-configure: do_configure tasks fails for unknown reason', '', d)}"

# Victims depend on something already blacklisted by the unknown failures above
ROS_WORLD_SKIP_GROUPS += "unknown-victim"
PNBLACKLIST[abb-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[abb-irb2400-moveit-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ackermann-steering-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[adi-driver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires rviz which requires meta-qt5 to be included and rqt-plot->python-qt-binding which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ainstein-radar-drivers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ainstein-radar-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[arbotix-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[arbotix-python] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[arbotix-sensors] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[arbotix] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[astuff-sensor-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ati-force-torque] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gazebo', 'unknown-victim'], 'gazebo: Depends on gazebo-ros which is not available; unknown-victim: depends on cob-generic-can which depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[automotive-autonomy-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[aws-ros1-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[calibration-launch] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[calibration-setup-helper] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[canopen-402] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[canopen-chain-node] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[chomp-motion-planner] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[clock-relay] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cloudwatch-logger] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cloudwatch-logs-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cloudwatch-metrics-collector] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cloudwatch-metrics-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-3d-mapping-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-base-drive-chain] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-bms-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-canopen-motor] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-collision-monitor] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-control-mode-adapter] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-dashboard] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-robot-dashboard->python-qt-binding which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-elmo-homing] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-extern] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-frame-tracker] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-gazebo-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-generic-can] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-hand-bridge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-hand] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-hardware-emulation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-image-flip] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-linear-nav] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-lookat-action] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-map-accessibility-analysis] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-object-detection-visualizer] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-obstacle-distance-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-perception-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-phidget-em-state] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-phidget-power-state] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-phidgets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-relayboard] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-substitute] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-trajectory-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[cob-undercarriage-ctrl] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[concert-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[control-toolbox] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[controller-manager-tests] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[costmap-cspace] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[costmap-queue] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataflow-lite] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-can-msg-filters] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-can-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-can-usb] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-can] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-pds-can] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-pds-rqt] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-pds-scripts] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-pds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-ulc-can] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dataspeed-ulc] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dbw-fca-can] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dbw-fca-joystick-demo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dbw-fca] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dbw-mkz-can] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dbw-mkz-joystick-demo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dbw-mkz-twist-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dbw-mkz] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[default-cfg-fkie] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[derived-object-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dlux-global-planner] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dlux-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[driver-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dwb-critics] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dwb-local-planner] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dwb-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dwb-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[dynamixel-workbench-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[eband-local-planner] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on control-toolbox failing for unknown reason', '', d)}"
PNBLACKLIST[effort-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ethercat-hardware] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ethercat-trigger-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[euscollada] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[executive-smach] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-aico-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-cartpole-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-collision-scene-fcl-latest] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-collision-scene-fcl] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-ddp-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-double-integrator-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-dynamics-solvers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-cartpole-dynamics-solver,exotica-double-integrator-dynamics-solver,exotica-quadrotor-dynamics-solver,exotica-pendulum-dynamics-solver,exotica-pinocchio-dynamics-solver->exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-ik-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-ilqg-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-ilqr-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-levenberg-marquardt-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-ompl-control-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-pendulum-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-pinocchio-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-quadrotor-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-scipy-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[exotica-time-indexed-rrt-connect-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[face-detector] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fetch-calibration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fetch-driver-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fetch-ikfast-plugin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fetch-open-auto-dock] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fetch-simple-linear-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fetch-teleop] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[file-management] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-behavior-engine] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-input] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-mirror] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-onboard] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-states] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-testing] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[flexbe-widget] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fmi-adapter-examples] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires rqt-plot->python-qt-binding which requires meta-qt5 to be included rqt-plot->python-qt-binding which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[four-wheel-steering-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[freight-bringup] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fsrobo-r-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[fsrobo-r-trajectory-filters] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[global-planner-tests] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[grasping-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[grid-map-filters] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[grid-map-loader] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[grid-map-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[grid-map-visualization] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[gripper-action-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[gundam-rx78-control] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires ros-controllers->rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and ros-controllers->rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[health-metric-collector] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[hector-map-server] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[hector-trajectory-server] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[husky-cartographer-navigation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on husky-navigation failing for unknown reason', '', d)}"
PNBLACKLIST[ibeo-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ibeo-lux] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[imagezero-image-transport] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[industrial-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on industrial-trajectory-filters->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and industrial-trajectory-filters->moveit-ros-planning->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[industrial-robot-client] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[industrial-robot-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[industrial-trajectory-filters] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[joint-trajectory-action-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[joint-trajectory-action] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[joint-trajectory-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[joint-trajectory-generator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[jointstick] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[joy-teleop] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[jsk-common-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[kinesis-manager] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[kinesis-video-streamer] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[laser-tilt-controller-filter] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[leg-detector] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[leuze-phidget-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[leuze-rsl-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[lex-common-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[lex-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[lex-node] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[libuvc-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[locomotor-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[locomotor] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[locomove-base] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[map-organizer] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mapviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'x11', 'unknown-victim'], 'Requires libqt-rosdev->qtbase which requires meta-qt5 to be included and depends on mapviz->(freeglut, libxmu, libxi) which require x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mapviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'x11', 'unknown-victim'], 'Requires libqt-rosdev->qtbase which requires meta-qt5 to be included and freeglut, libxmu, libxi which require x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[marti-nav-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mav-comm] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mav-planning-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mbf-abstract-nav] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mbf-costmap-nav] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mbf-simple-nav] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mcl-3dl] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[md49-base-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[message-relay] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mir-dwb-critics] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mongodb-log] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['mongodb', 'unknown-victim'], 'Requires mongodb-store->mongodb; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[move-base-flex] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-chomp-optimizer-adapter] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-controller-manager-example] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-fake-controller-manager] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-kinematics] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-planners-chomp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-planners-ompl] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-planners] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-planners-ompl->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-planners-ompl->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-fake-controller-manager->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-fake-controller-manager->moveit-ros-planning->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-pr2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on pr2-moveit-config->moveit-ros-move-group->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and pr2-moveit-config->moveit-ros-move-group->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-benchmarks] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-control-interface] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-manipulation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-move-group] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-perception] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-planning-interface] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-planning] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-robot-interaction] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-ros-warehouse] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-runtime] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-sim-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[moveit-simple-controller-manager] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[mpc-local-planner-examples] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'opengl: Depends on stage-ros->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: stage-ros->stage->(fltk,gtk+)->x11; unknown-victim: depends on unknown-victim: depends on mpc-local-planner which depends on teb-local-planner, mbf-msgs failing for unknown reason', '', d)}"
PNBLACKLIST[multires-image] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'x11', 'unknown-victim'], 'Requires libqt-rosdev->qtbase which requires meta-qt5 to be included and depends on mapviz->(freeglut, libxmu, libxi) which require x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[multisense-bringup] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[multisense-cal-check] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[multisense] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[naoqi-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[naoqi-libqicore] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav-2d-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav-core-adapter] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav-core2] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav-grid-iterators] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav-grid-pub-sub] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav2d-exploration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav2d-karto] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav2d-navigator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav2d-remote] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav2d-tutorials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nav2d] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[navigation-experimental] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[navigation-layers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[navigation-stage] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on stage-ros->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage-ros->stage->(fltk,gtk+)->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[navigation-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on (navigation-stage,roomba-stage)->stage-ros->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and (navigation-stage,roomba-stage)->stage-ros->stage->(fltk,gtk+)->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[neonavigation-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nmea-comms] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nmea-navsat-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[nmea-to-geopose] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[novatel-span-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ocean-battery-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[octomap-mapping] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[octomap-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[octomap-server] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[omron-os32c-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[open-manipulator-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning(-interface)->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[open-manipulator-teleop] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[p2os-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[p2os-launch] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[packagegroup-ros1-industrial-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on industrial-trajectory-filters->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and industrial-trajectory-filters->moveit-ros-planning->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pacmod-game-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pacmod3] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[people-tracking-filter] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[people-velocity-tracker] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[people] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[phidgets-api] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[phidgets-drivers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[phidgets-high-speed-encoder] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[phidgets-ik] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[phidgets-imu] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pilz-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pilz-trajectory-generation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning(-interface)->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pinocchio] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[planner-cspace] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[power-monitor] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-app-manager] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-apps] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-arm-kinematics] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-arm-move-ik] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-calibration-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-common-actions] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-controller-interface] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-controller-manager] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-dashboard-aggregator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-ethercat-drivers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-gripper-action] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-head-action] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-kinematics] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-mannequin-mode] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-mechanism-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-mechanism] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-move-base] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-move-group->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-move-group->moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-moveit-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-navigation-global] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-navigation-local] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-navigation-perception] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-navigation-slam] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-navigation-teleop] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-navigation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-position-scripts] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-power-board] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-power-drivers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-teleop-general] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-teleop] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-tilt-laser-interface] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-tuck-arms-action] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[pr2-tuckarm] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[prbt-ikfast-manipulator-plugin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[prosilica-camera] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[qt-gui-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires qt-gui-py-common which requires meta-qt5 to be included and qt-gui(-cpp)->python-qt-binding which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rc-pick-client] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rc-roi-manager-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on wxwidgets->freeglut which is not available because of missing opengl in DISTRO_FEATURES and wxwidgets->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rc-tagdetect-client] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rc-visard-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rc-visard] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on rc-roi-manager-gui->wxwidgets->freeglut which is not available because of missing opengl in DISTRO_FEATURES and rc-roi-manager-gui->wxwidgets->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[realsense2-camera] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ridgeback-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot-activity-tutorials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot-activity] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot-body-filter] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot-calibration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot-controllers-interface] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot-mechanism-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot-navigation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[robot] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rocon-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[roomba-stage] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on stage-ros->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage-ros->stage->(fltk,gtk+)->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ros-control-boilerplate] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ros-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ros-controllers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rosbridge-server] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rosbridge-suite] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rosmon-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rosmon] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires rqt-rosmon->qtbase which requires meta-qt5 to be included and rqt-rosmon->rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rosrt] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[roswww] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rotors-comm] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rotors-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rotors-hil-interface] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rotors-joy-interface] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rqt-controller-manager] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rqt-gui-cpp] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires qtbase which requires meta-qt5 to be included and qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rqt-image-view] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires qtbase which requires meta-qt5 to be included and rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rqt-joint-trajectory-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rqt-multiplot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires qtbase which requires meta-qt5 to be included and rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rqt-rosmon] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires qtbase which requires meta-qt5 to be included and rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rqt-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires qtbase which requires meta-qt5 to be included and rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rqt] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'unknown-victim'], 'Requires rqt-gui-cpp->qtbase which requires meta-qt5 to be included and (rqt-gui-py,rqt-gui-cpp)->qt-gui->python-pyqt5 which requires pyqt5; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rslidar-pointcloud] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[rslidar] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[safe-teleop-pr2] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[safe-teleop-stage] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage->(fltk,gtk+)->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[safety-limiter] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[sbpl-recovery] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[schunk-libm5api] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[schunk-modular-robotics] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[schunk-powercube-chain] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[schunk-sdh] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[schunk-simulated-tactile-sensors] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[seed-r7-navigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'unknown-victim'], 'Depends on teb-local-planner->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[seed-r7-robot-interface] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[seed-r7-ros-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[simple-message] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[single-joint-position-action] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[smach-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[social-navigation-layers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[socketcan-bridge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[stage-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage->(fltk,gtk+)->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[swri-profiler] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[swri-roscpp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[swri-route-util] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[teb-local-planner-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'unknown-victim'], 'Depends on teb-local-planner->libg2o->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage-ros->stage->(fltk,gtk+)->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[teleop-tools-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[teleop-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[test-mavros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[tf2-relay] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[tile-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'x11', 'unknown-victim'], 'Requires libqt-rosdev->qtbase which requires meta-qt5 to be included and depends on mapviz->(freeglut, libxmu, libxi) which require x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[trajectory-tracker] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[tuw-checkerboard] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['x11', 'unknown-victim'], 'Depends on image-view->gtk+->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[tuw-ellipses] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[tuw-marker-detection] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['x11', 'unknown-victim'], 'Depends on tuw-checkerboard->image-view->gtk+->x11; unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[tuw-marker-pose-estimation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[tuw-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ublox-gps] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[ublox] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[usb-cam-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[usb-cam-hardware] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[uuv-teleop] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[variant-topic-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[variant] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[velocity-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[velodyne-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[velodyne-pointcloud] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[velodyne] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[volksbot-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[xpp-examples] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[xpp-hyq] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[xpp-quadrotor] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[xpp-vis] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
PNBLACKLIST[xpp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'unknown-victim', 'unknown-victim: depends on something failing for unknown reason', '', d)}"
